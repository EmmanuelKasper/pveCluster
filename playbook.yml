---
- hosts: all
  gather_facts: yes
  become: yes
  become_method: sudo

  tasks:

    # Idempotent way to build a /etc/hosts file with Ansible using your Ansible hosts inventory for a source.
    # Will include all hosts the playbook is run on.
    - name: Remove /etc/host entry if it contains our hostname
      lineinfile: dest=/etc/hosts regexp="{{ansible_hostname}}" state=absent

   # See http://xmeblog.blogspot.com/2013/06/ansible-dynamicaly-update-etchosts.html for explanation
    - name: Build hosts file mapping our hostname to our non-loopback ip
      lineinfile: dest=/etc/hosts regexp="{{ansible_default_ipv4.address}} {{ansible_hostname}}" line="{{ansible_default_ipv4.address}} {{ansible_hostname}}" state=present

    - name: Add Proxmox install repo apt key
      apt_key: url=http://download.proxmox.com/debian/proxmox-ve-release-5.x.gpg

    - name: Add promox pvetest repo
      apt_repository: repo='deb http://download.proxmox.com/debian/pve stretch pvetest'

    - name: Disable proxmox enterprise
      apt_repository:
        repo='deb https://enterprise.proxmox.com/debian/pve stretch pve-enterprise'
        filename=pve-enterprise.list
        state=absent

    - name: Use unsafe io option for dpkg to speed up installs
      lineinfile: dest=/etc/dpkg/dpkg.cfg.d/force-unsafe-io line=force-unsafe-io create=yes

    - name: install our proxmox packages
      apt: pkg={{item}} update_cache=yes state=latest cache_valid_time=0
      with_items:
        - proxmox-ve

    - name: upload a preseed file for kexec-tools containing our answers for debconf
      copy: src=files/kexec-tools.preseed dest=/var/tmp/kexec-tools.preseed

    - name: preconfigure kexec-tools to load the default kernel from grub config  
      command: debconf-set-selections /var/tmp/kexec-tools.preseed

    - name: install kexec-tools to quickly reboot
      apt: pkg=kexec-tools update_cache=no state=latest

    - name: we expect to have a vmbr0 bridge already present
      command: ifquery vmbr0
      register: has_bridge
      ignore_errors: true
      changed_when: false

    - name: upload an interface file with a bridge
      template: src=files/interfaces.j2 dest=/etc/network/interfaces
      when: "has_bridge.rc != 0"

    # https://support.ansible.com/hc/en-us/articles/201958037-Reboot-a-server-and-wait-for-it-to-come-back
    - name: restart machine
      # workaround: the ansible task should close cleanly before the reboot, so we delay the reboot from 3 seconds
      shell: "sleep 3; shutdown -r now"
      # workaround: force one second waiting so the connection is not immediatly closed  
      async: 1
      poll: 0
      ignore_errors: true

    - name: waiting for server to come back
      #starts polling the server after a 25 second delay, wait for 300 seconds
      local_action: 
        wait_for
        host={{ ansible_ssh_host }}
        port=8006
        state=started
        delay=30
        timeout=300
      become: no

    - shell: uname -srm
      register: kernel_string

    - debug: var=kernel_string.stdout
